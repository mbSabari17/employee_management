openapi: 3.0.0
info:
  title: Employee Management API
  description: "API for managing employee records, allowing CRUD operations."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/MBSABARI17_1/EmployeeManagementV1/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:3000/api/v1
paths:
  /employees:
    get:
      summary: Retrieve a list of employees
      operationId: getEmployees
      responses:
        "200":
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        "500":
          description: Internal server error
    post:
      summary: Create a new employee
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "201":
          description: Employee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Bad request - invalid input
        "500":
          description: Internal server error
  /employees/{id}:
    get:
      summary: Retrieve an employee by ID
      operationId: getEmployeeById
      parameters:
      - name: id
        in: path
        description: The ID of the employee
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: An employee object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "404":
          description: Employee not found
        "500":
          description: Internal server error
    put:
      summary: Update an employee
      operationId: updateEmployee
      parameters:
      - name: id
        in: path
        description: The ID of the employee
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      responses:
        "200":
          description: Employee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        "400":
          description: Bad request - invalid input
        "404":
          description: Employee not found
        "500":
          description: Internal server error
    delete:
      summary: Delete an employee
      operationId: deleteEmployee
      parameters:
      - name: id
        in: path
        description: The ID of the employee
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Employee deleted successfully
        "404":
          description: Employee not found
        "500":
          description: Internal server error
components:
  schemas:
    Employee:
      required:
      - department
      - email
      - firstName
      - lastName
      - phone
      - position
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the employee
        firstName:
          type: string
          description: Employee's first name
        lastName:
          type: string
          description: Employee's last name
        department:
          type: string
          description: Employee's department
          enum:
          - HR
          - Engineering
          - Sales
          - Marketing
          - Finance
        position:
          type: string
          description: Employee's job title
          enum:
          - Manager
          - Senior
          - Junior
          - Intern
        phone:
          type: string
          description: Employee's phone number
        email:
          type: string
          description: Employee's email address
          format: email
